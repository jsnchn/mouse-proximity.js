!function(a, b) {
    var c = "mouseProximity";
    "function" == typeof define && define.amd ? define([], b(c)) : "object" == typeof exports ? module.exports = b(c) : a[c] = b(c);
}(this, function(a) {
    "use strict";
    function b(a, b) {
        var h = this;
        this.options = e(c, b), this.elements = [].slice.call(a).length > 0 ? [].slice.call(a) : [ a ];
        var i = this.elements;
        this.elements.length;
        console.log("mouse proximity inititalized for:", i), this.calcDists = function(a) {
            f(a), h.options.clear && console.clear(), i.forEach(h.calcDist);
        }, this.calcDist = function(a, b, c) {
            a.mouseProximity = Math.floor(Math.sqrt(Math.pow(d.x - (g(a).left + a.offsetWidth / 2), 2) + Math.pow(d.y - (g(a).top + a.offsetHeight / 2), 2))), 
            h.options.showAttribute && a.setAttribute("data-mouse-proximity", a.mouseProximity), 
            h.options.cb(a, a.mouseProximity);
        };
    }
    var c = {
        clear: !1,
        origin: "center",
        showAttribute: !0,
        cb: function(a, b) {
            console.log(a.outerHTML + ", distance " + b);
        }
    }, d = {
        x: 0,
        y: 0
    }, e = function(a, b) {
        var d, e = {};
        for (d in c) Object.prototype.hasOwnProperty.call(c, d) && (e[d] = c[d]);
        for (d in b) Object.prototype.hasOwnProperty.call(b, d) && (e[d] = b[d]);
        return e;
    }, f = function(a) {
        d.x = a.pageX, d.y = a.pageY;
    }, g = function(a) {
        var b = a.getBoundingClientRect(), c = document.body;
        return {
            top: b.top + c.scrollTop,
            left: b.left + c.scrollLeft
        };
    };
    if (b.prototype = {
        run: function(a) {
            this.options.cb = a ? a : this.options.cb, document.addEventListener("mousemove", this.calcDists, !1);
        },
        stop: function() {
            document.removeEventListener("mousemove", this.calcDists, !1);
        }
    }, window.jQuery) {
        var h = window.jQuery;
        h.fn[a] = function(a) {
            return a = a || {}, new b(this, a);
        };
    }
    return b;
});